@use "sass:selector"

.alert
  // The parent selector can be used to add pseudo-classes to the outer
  // selector.
  &:hover
    font-weight: bold


  // It can also be used to style the outer selector in a certain context, such
  // as a body set to use a right-to-left language.
  [dir=rtl] &
    margin-left: 0
    margin-right: 10px


  // You can even use it as an argument to pseudo-class selectors.
  :not(&)
    opacity: 0.8


// When Sass is nesting selectors, it doesn’t know what interpolation was used to generate them.
// This means it will automatically add the outer selector to the inner selector even if you used & as a SassScript expression.
// That’s why you need to explicitly use the @at-root rule to tell Sass not to include the outer selector.

@mixin unify-parent($child)
  @at-root #{selector.unify(&, $child)}
    @content



.wrapper .field
  @include unify-parent("input")
    /* ...

  @include unify-parent("select")
    /* ...
